---
--- Generated by Luanalysis
--- Created by xs.
--- DateTime: 2025/6/20 下午3:27
--- 功能：判断库存是否充足，判断是否重复下单

--- 实现：
--- 需要的参数：用户id，秒杀券id
--- 存储：秒杀券保存为string类型，用户id保存到set集合中去，通过set集合判断是否是同一用户重复下单

local voucherId = ARGV[1]  -- 秒杀券id
local userId = ARGV[2]
local orderId = ARGV[3]
local stockKey = "seckill:stock:" .. voucherId
local orderKey = "seckill:order:" .. voucherId

-- 1. 判断库存是否充足（返回的是stock的字符串表示，所以需要转化为number）
if(tonumber(redis.call('get', stockKey)) <= 0) then
    return 1
end
-- 2. 判断是否重复下单（这里返回的是就是integer，表示存在与否）
if (redis.call('sismember', orderKey, userId) == 1) then
    return 2
end
-- 3. 库存充足且是第一次下单
redis.call('incrby', stockKey, -1)
redis.call('sadd', orderKey, userId)
-- 4. 将下单信息加入消息队列 xadd stream.orders * "voucherId" voucherId "userId" userId "orderId" orderId
-- 这里orderId为什么写成id，是为了将来取出的时候，方便对VoucherOrder进行属性注入
redis.call('xadd', 'stream.orders', '*', "voucherId", voucherId, "userId", userId, "id", orderId)
return 0

